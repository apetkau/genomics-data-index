configfile: "config/config.yaml"


rule all:
    input:
        expand("variant/{sample}.vcf.gz", sample=config["samples"]),
        expand("consensus/{sample}.fasta.gz", sample = config["samples"])


rule assembly_align:
    input:
        reference=config["reference"],
        sample="data/{sample}.fasta",
    output:
        "align/{sample}.bam",
    conda:
        "envs/main.yaml"
    log:
        mm2="logs/assembly_align.{sample}.minimap2.log",
        samview="logs/assembly_align.{sample}.samview.log",
        bamsort="logs/assembly_align.{sample}.bamsort.log",
    shell:
        "minimap2 -a -x asm5 {input.reference} {input.sample} 2> {log.mm2} | "
        "samtools view -b 2> {log.samview} | "
        "bamtools sort 1> {output} 2> {log.bamsort}"


rule assembly_variant:
    input:
        reference=config["reference"],
        bam="align/{sample}.bam",
    output:
        "variant/{sample}.vcf.gz",
    conda:
        "envs/main.yaml"
    log:
        mpileup="logs/assembly_variant.{sample}.mpileup.log",
        call="logs/assembly_variant.{sample}.call.log",
    shell:
        "bcftools mpileup -Ou -f {input.reference} {input.bam} 2> {log.mpileup} | "
        "bcftools call --ploidy 1 -Oz -mv 1> {output}"


rule assembly_consensus:
    input:
        reference=config["reference"],
        bam="align/{sample}.bam",
    output:
        "consensus/{sample}.fasta.gz",
    conda:
        "envs/main.yaml"
    log:
        consensus="logs/assembly_consensus.{sample}.consensus.log",
    shell:
        "htsbox pileup -f {input.reference} -d -F {input.bam} 2> {log.consensus} | "
        "gzip -c - > {output}"


# rule fofn_gdi_input:
#    input:
